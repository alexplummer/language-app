{"version":3,"sources":["app.js","helperFunctions.js","verbs.js","termCreation.js","viewCreation.js","queryInteraction.js","termInteraction.js"],"names":["app","ready","fn","document","readyState","addEventListener","cl","log","console","checkSameDay","todaysDate","getTodaysDate","storedDate","Array","from","ops","storedData","dateOpened","arrayCheck","addDay","newDay","todayDate","day","Date","getDate","month","getMonth","push","arr1","arr2","JSON","stringify","resetData","querySelector","e","preventDefault","localforage","clear","clickListener","elements","clickFunction","i","length","pickRandom","objectList","keys","Object","pickedTerm","Math","random","checkQuery","item1","item2","toUpperCase","getBigrams","string","j","ref","s","v","toLowerCase","slice","stringSimilarity","str1","str2","hit_count","k","len","len1","pairs1","pairs2","union","x","y","relevance","wordAccuracy","appData","terms","accogliere","term","definition","support","accompagnare","accorgere","affermare","affrontare","aggiungere","aiutare","allontanare","alzare","amare","ammazzare","ammettere","andare","annunciare","apparire","appartenere","appoggiare","aprire","armare","arrestare","arrivare","ascoltare","aspettare","assicurare","assistere","assumere","attaccare","attendere","attraversare","aumentare","avanzare","avere","avvenire","avvertire","avvicinare","baciare","badare","bastare","battere","bere","bisognare","bruciare","buttare","cadere","cambiare","camminare","cantare","capire","capitare","celebrare","cercare","chiamare","chiedere","chiudere","colpire","cominciare","compiere","comporre","comprendere","comprare","concedere","concludere","condurre","confessare","conoscere","consentire","conservare","considerare","contare","contenere","continuare","convincere","coprire","correre","costituire","costringere","costruire","creare","credere","crescere","dare","decidere","dedicare","descrivere","desiderare","determinare","dichiarare","difendere","diffondere","dimenticare","dimostrare","dipendere","dire","dirigere","discutere","disporre","distinguere","distruggere","diventare","divenire","divertire","dividere","domandare","dormire","dovere","durare","elevare","entrare","escludere","esistere","esporre","esprimere","essere","estendere","evitare","ferire","fermare","figurare","finire","fissare","fondare","formare","fornire","fuggire","fumare","gettare","giocare","girare","giudicare","giungere","godere","gridare","guardare","guidare","immaginare","imparare","impedire","importare","imporre","incontrare","indicare","iniziare","innamorare","insegnare","insistere","intendere","interessare","invitare","lanciare","lasciare","lavorare","legare","leggere","levare","liberare","limitare","mancare","mandare","mangiare","mantenere","meritare","mettere","morire","mostrare","muovere","nascere","nascondere","notare","occorrere","offendere","offrire","opporre","ordinare","organizzare","osservare","ottenere","pagare","parere","parlare","partecipare","partire","passare","pensare","perdere","permettere","pesare","piacere","piangere","piantare","porre","portare","posare","possedere","potere","preferire","pregare","prendere","preoccupare","preparare","presentare","prevedere","procedere","produrre","promettere","proporre","provare","provocare","provvedere","pubblicare","raccogliere","raccontare","raggiungere","rappresentare","recare","rendere","resistere","restare","ricevere","richiedere","riconoscere","ricordare","ridere","ridurre","riempire","rientrare","riferire","rifiutare","riguardare","rimanere","rimettere","ringraziare","ripetere","riportare","riprendere","risolvere","rispondere","risultare","ritenere","ritornare","ritrovare","riunire","riuscire","rivedere","rivelare","rivolgere","rompere","salire","saltare","salutare","salvare","sapere","sbagliare","scappare","scegliere","scendere","scherzare","scomparire","scoppiare","scoprire","scorrere","scrivere","scusare","sedere","segnare","seguire","sembrare","sentire","servire","significare","smettere","soffrire","sognare","sorgere","sorprendere","sorridere","sostenere","spegnere","sperare","spiegare","spingere","sposare","stabilire","staccare","stare","stringere","studiare","succedere","suonare","superare","svegliare","svolgere","tacere","tagliare","temere","tendere","tenere","tentare","tirare","toccare","togliere","tornare","trarre","trascinare","trasformare","trattare","trovare","uccidere","udire","unire","usare","uscire","valere","vedere","vendere","venire","vestire","vincere","vivere","volare","volere","volgere","voltare","getListOfTerms","listOfTerms","scannedTerms","dataLength","displayedTerms","firstTime","undefined","includes","incorrectTerms","reminderTerm","remindedTerms","dailyReminder","getOwnPropertyNames","viewedLength","viewedTerms","viewedSorted","m","hasOwnProperty","splice","sort","a","b","setItem","updateDataCount","dataType","termsToAdjust","baseValue","dataTypeHolder","value","count","viewCreate","termsToCreate","viewHTML","termValue","definitionValue","supportValue","revealCounter","viewsCount","revealedTermCount","newHolder","container","innerHTML","revealCountdowns","revealBtn","querySelectorAll","revealTerm","parentNode","createRevealTimer","addHearts","heartHolder","heartsHTML","hearts","points","setScore","scoreHolder","score","createNewQuery","queryTerms","randomTerm","correctTerms","dailyQuery","queryHandler","dailyTerms","queryWrapper","queryHolder","querySubmit","resultHolder","parseInt","classList","remove","queryInput","winCase","loseCase","spelling","add","correct","queryComplete","gameWon","placeholder","removeChild","getElementsByTagName","revealedBtnHandler","contains","countHolder","definitionWrapper","definitionHolder","dataCount","revealBonusCount","revealDailyBonus","revealDailyBonusTarget","complete","dailyBonus","minutes","counterMins","seconds","counterSecs","remainingMinutes","remainingSeconds","startTime","timerEnded","getTime","startTimer","nowTime","setAttribute","diffSecs","floor","totalSecs","clearInterval","timerUpdate","timeout","checkCount","setInterval","buttonTimer","displayedMinutes","displayedSeconds","hiddenZero","disabled","debug","checkFirstTime","then","numberOfKeys","initialise","catch","err","appBuildHandler","getItem","checkData","retrievedData","pickedTerms","ops$1"],"mappings":"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","file":"app.js","sourcesContent":["\r\n// Imports\r\nimport { ready, cl, clv, checkSameDay, resetData, arrayCheck, getTodaysDate } from 'helperFunctions';\r\nimport { getListOfTerms, updateDataCount } from 'termCreation';\r\nimport { revealedBtnHandler } from 'termInteraction';\r\nimport { viewCreate, addHearts, setScore } from 'viewCreation';\r\nimport { createNewQuery } from 'queryInteraction';\r\n\r\n// Exports\r\nexport default ops;\r\n\r\n// Global options\r\nlet ops = {\r\n    displayedTerms: 3,\r\n    counterMins: 60,\r\n    counterSecs: 0,\r\n    revealDailyBonusTarget: 2,\r\n    wordAccuracy: 0.5,\r\n    container: document.querySelector(\".terms-wrapper\"),\r\n    addDay: false,\r\n    debug: true,\r\n    points: {\r\n        correct: 50,\r\n        dailyBonus: 10,\r\n        hearts: 3\r\n    },\r\n    storedData: {}\r\n}\r\n\r\n// Initialise modules on load\r\nready(function () {\r\n    'use strict';\r\n    checkFirstTime();\r\n    // Resets button\r\n    resetData();\r\n});\r\n\r\n// Runs when app opens\r\nconst checkFirstTime = function checkFirstTime() {\r\n\r\n    // Check if this is the first time app has run\r\n    localforage.length().then(numberOfKeys => {\r\n\r\n        // If first time\r\n        if (numberOfKeys === 0) {\r\n            firstTime();\r\n        }\r\n        // Not first time\r\n        else {\r\n            ops.storedData.firstTime = false;\r\n            initialise();\r\n        }\r\n    }).catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\n// Runs if first time app has run\r\nconst firstTime = function firstTime() {\r\n\r\n    // Create terms\r\n    appBuildHandler();\r\n\r\n    // Set first time to false\r\n    ops.storedData.firstTime = false;\r\n\r\n    // Add to storage\r\n    localforage.setItem('ops.storedData', ops.storedData);\r\n}\r\n\r\n// Initialises data and app\r\nconst initialise = function initialise() {\r\n\r\n    // Get stored data\r\n    localforage.getItem('ops.storedData').then(retrievedData => {\r\n        checkData(retrievedData);\r\n    }).catch(err => {\r\n        console.log(err);\r\n    });\r\n\r\n    // Handle retrieved data\r\n    function checkData(retrievedData) {\r\n\r\n        // Set data in app from storage\r\n        ops.storedData = retrievedData;\r\n\r\n        // Check if a new day\r\n        checkSameDay();\r\n\r\n        // Start build\r\n        appBuildHandler();\r\n    }\r\n}\r\n\r\n// Calls functions to handle app creation and running\r\nconst appBuildHandler = function appBuildHandler() {\r\n\r\n    // Get initial terms\r\n    let pickedTerms;\r\n\r\n    // If same day, used daily terms\r\n    if (ops.storedData.newDay === false) {\r\n        pickedTerms = ops.storedData.dailyTerms;\r\n    }\r\n    // Else get new  \r\n    else {\r\n        pickedTerms = getListOfTerms();\r\n        \r\n        // Set daily limit\r\n        ops.storedData.revealDailyBonus = ops.storedData.revealDailyBonus || {};\r\n        // Reset daily reveal bonus\r\n        ops.storedData.revealDailyBonus.complete = false;\r\n    }\r\n\r\n    // Create initial view\r\n    viewCreate(pickedTerms);\r\n    setScore();\r\n\r\n    // Create opened date, daily terms, viewed terms\r\n    ops.storedData.dateOpened = getTodaysDate();\r\n    ops.storedData.dailyTerms = pickedTerms;\r\n    ops.storedData.viewedTerms = updateDataCount('viewedTerms', pickedTerms, 0);\r\n\r\n    // Add to storage\r\n    localforage.setItem('ops.storedData', ops.storedData);\r\n\r\n    // Handles events for revealed terms\r\n    revealedBtnHandler();\r\n\r\n    // Keep query active each day\r\n    ops.storedData.queryComplete = ops.storedData.queryComplete || {};\r\n\r\n    if (ops.storedData.newDay === true) {\r\n        delete ops.storedData.dailyQuery;\r\n        ops.storedData.queryComplete = false;\r\n        ops.storedData.remindedTerms = ops.storedData.remindedTerms || {}\r\n\r\n        // Delete daily reminder\r\n        if (ops.storedData.remindedTerms.dailyReminder !== undefined) {\r\n            delete ops.storedData.remindedTerms.dailyReminder;\r\n        }\r\n    }\r\n    // Create query if revealed terms\r\n    if (ops.storedData.revealedTermCount !== undefined && ops.storedData.queryComplete === false) {\r\n        createNewQuery();\r\n    }\r\n\r\n    // Debug code\r\n    if (ops.debug === true) {\r\n        cl(ops.storedData);\r\n        //cl('Revealed terms count:');\r\n        //cl(ops.storedData.revealedTermCount);\r\n        //cl('Viewed terms count:');\r\n        //cl(ops.storedData.viewedTerms);\r\n        //cl('Revealed terms timer:');\r\n        //cl(ops.storedData.revealCountdowns);\r\n    };\r\n}\r\n\r\n","\r\n// Imports\r\nimport ops from 'app';\r\n\r\n// Exports\r\nexport {\r\n    ready,\r\n    cl,\r\n    clv,\r\n    checkSameDay,\r\n    resetData,\r\n    arrayCheck,\r\n    getTodaysDate,\r\n    pickRandom,\r\n    clickListener,\r\n    getTimeComplete,\r\n    checkQuery\r\n};\r\n\r\n// JS ready\r\nfunction ready(fn) {\r\n    if (document.readyState != 'loading') {\r\n        fn();\r\n    } else {\r\n        document.addEventListener('DOMContentLoaded', fn);\r\n    }\r\n}\r\n\r\n// Console log -> cl\r\nfunction cl(log) {\r\n    console.log(log);\r\n}\r\n\r\n// Console log plus value\r\nfunction clv(term, log) {\r\n    console.log(term + '= ' + log);\r\n}\r\n\r\n// Checks if the same or new day\r\nfunction checkSameDay() {\r\n\r\n    let todaysDate = getTodaysDate();\r\n    let storedDate = [];\r\n\r\n    // Get date last stored\r\n    storedDate = Array.from(ops.storedData.dateOpened);\r\n\r\n    // Check if same day\r\n    if (arrayCheck(todaysDate, storedDate) === true) {\r\n        if (ops.addDay === true) { ops.storedData.newDay = true }\r\n        else { ops.storedData.newDay = false }\r\n    }\r\n    // Otherwise a new day\r\n    else {\r\n        ops.storedData.newDay = true;\r\n    }\r\n}\r\n\r\n// Creates array of day and month\r\nfunction getTodaysDate() {\r\n\r\n    // Get current day + month\r\n    let todayDate = [];\r\n    let day = new Date().getDate()\r\n    let month = new Date().getMonth();\r\n\r\n    todayDate.push([day, month]);\r\n\r\n    return todayDate;\r\n}\r\n\r\n// Creates array of day, month, hour, minute, second\r\nfunction getTimeComplete() {\r\n\r\n    // Get complete date time value \r\n    let timeComplete = [];\r\n    let day = new Date().getDate();\r\n    let month = new Date().getMonth();\r\n    let hour = new Date().getHours();\r\n    let minute = new Date().getMinutes();\r\n    let second = new Date().getSeconds();\r\n\r\n    timeComplete.push([day, month, hour, minute, second]);\r\n\r\n    return timeComplete;\r\n}\r\n\r\n// Check if arrays are the same\r\nfunction arrayCheck(arr1, arr2) {\r\n\r\n    // If same return true\r\n    if (JSON.stringify(arr1) == JSON.stringify(arr2)) {\r\n        return true;\r\n    }\r\n    // Else false\r\n    return false;\r\n}\r\n\r\n// Resets stored data\r\nfunction resetData() {\r\n\r\n    document.querySelector('.reset').addEventListener('click', (e) => {\r\n        e.preventDefault;\r\n        localforage.clear();\r\n        cl('APP RESET');\r\n    })\r\n}\r\n\r\n// Adds click functionality to selectors\r\nfunction clickListener(elements, clickFunction) {\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        elements[i].addEventListener(\"click\", () => { clickFunction(i) });\r\n    }\r\n}\r\n\r\n// Get a random term\r\nfunction pickRandom(objectList) {\r\n    let keys = Object.keys(objectList),\r\n        pickedTerm = keys[keys.length * Math.random() << 0];\r\n\r\n    return pickedTerm;\r\n}\r\n\r\n// Check if two words the same\r\nfunction checkQuery(item1, item2) {\r\n\r\n    if (item1 === item2) return true;\r\n    if (item1.toUpperCase() === item2.toUpperCase()) return true;\r\n\r\n    // Perform fuzzy comparison\r\n    let getBigrams = function (string) {\r\n        let i, j, ref, s, v;\r\n        s = string.toLowerCase();\r\n        v = new Array(s.length - 1);\r\n        for (i = j = 0, ref = v.length; j <= ref; i = j += 1) {\r\n            v[i] = s.slice(i, i + 2);\r\n        }\r\n        return v;\r\n    };\r\n    let stringSimilarity = function (str1, str2) {\r\n        let hit_count, j, k, len, len1, pairs1, pairs2, union, x, y;\r\n        if (str1.length > 0 && str2.length > 0) {\r\n            pairs1 = getBigrams(str1);\r\n            pairs2 = getBigrams(str2);\r\n            union = pairs1.length + pairs2.length;\r\n            hit_count = 0;\r\n            for (j = 0, len = pairs1.length; j < len; j++) {\r\n                x = pairs1[j];\r\n                for (k = 0, len1 = pairs2.length; k < len1; k++) {\r\n                    y = pairs2[k];\r\n                    if (x === y) {\r\n                        hit_count++;\r\n                    }\r\n                }\r\n            }\r\n            if (hit_count > 0) {\r\n                return (2.0 * hit_count) / union;\r\n            }\r\n        }\r\n        return 0.0;\r\n    };\r\n    let relevance = stringSimilarity(item1, item2);\r\n    if (relevance > ops.wordAccuracy) return \"mispelled\";\r\n    \r\n    // Else false\r\n    return false;\r\n}\r\n","// App data\r\n\r\nexport default {\r\n\r\n    terms: {\r\n        accogliere: { term: \"accogliere\", definition: \"receive\", support: \"\"},\r\n        accompagnare: { term: \"accompagnare\", definition: \"accompany\", support: \"\"},\r\n        accorgere: { term: \"accorgere\", definition: \"become aware\", support: \"\"},\r\n        affermare: { term: \"affermare\", definition: \"affirm\", support: \"\"},\r\n        affrontare: { term: \"affrontare\", definition: \"face\", support: \"\"},\r\n        aggiungere: { term: \"aggiungere\", definition: \"add\", support: \"\"},\r\n        aiutare: { term: \"aiutare\", definition: \"help\", support: \"\"},\r\n        allontanare: { term: \"allontanare\", definition: \"remove\", support: \"\"},\r\n        alzare: { term: \"alzare\", definition: \"raise\", support: \"\"},\r\n        amare: { term: \"amare\", definition: \"love\", support: \"\"},\r\n        ammazzare: { term: \"ammazzare\", definition: \"kill\", support: \"\"},\r\n        ammettere: { term: \"ammettere\", definition: \"admit\", support: \"\"},\r\n        andare: { term: \"andare\", definition: \"go\", support: \"\"},\r\n        annunciare: { term: \"annunciare\", definition: \"announce\", support: \"\"},\r\n        apparire: { term: \"apparire\", definition: \"appear\", support: \"\"},\r\n        appartenere: { term: \"appartenere\", definition: \"belong\", support: \"\"},\r\n        appoggiare: { term: \"appoggiare\", definition: \"support\", support: \"\"},\r\n        aprire: { term: \"aprire\", definition: \"open\", support: \"\"},\r\n        armare: { term: \"armare\", definition: \"arm\", support: \"\"},\r\n        arrestare: { term: \"arrestare\", definition: \"stop\", support: \"\"},\r\n        arrivare: { term: \"arrivare\", definition: \"arrive\", support: \"\"},\r\n        ascoltare: { term: \"ascoltare\", definition: \"listen\", support: \"\"},\r\n        aspettare: { term: \"aspettare\", definition: \"wait\", support: \"\"},\r\n        assicurare: { term: \"assicurare\", definition: \"ensure\", support: \"\"},\r\n        assistere: { term: \"assistere\", definition: \"assist\", support: \"\"},\r\n        assumere: { term: \"assumere\", definition: \"take\", support: \"\"},\r\n        attaccare: { term: \"attaccare\", definition: \"attack\", support: \"\"},\r\n        attendere: { term: \"attendere\", definition: \"wait for\", support: \"\"},\r\n        attraversare: { term: \"attraversare\", definition: \"cross\", support: \"\"},\r\n        aumentare: { term: \"aumentare\", definition: \"increase\", support: \"\"},\r\n        avanzare: { term: \"avanzare\", definition: \"advance\", support: \"\"},\r\n        avere: { term: \"avere\", definition: \"have\", support: \"\"},\r\n        avvenire: { term: \"avvenire\", definition: \"occur\", support: \"\"},\r\n        avvertire: { term: \"avvertire\", definition: \"warn\", support: \"\"},\r\n        avvicinare: { term: \"avvicinare\", definition: \"approach\", support: \"\"},\r\n        baciare: { term: \"baciare\", definition: \"kiss\", support: \"\"},\r\n        badare: { term: \"badare\", definition: \"look after\", support: \"\"},\r\n        bastare: { term: \"bastare\", definition: \"suffice\", support: \"\"},\r\n        battere: { term: \"battere\", definition: \"beat\", support: \"\"},\r\n        bere: { term: \"bere\", definition: \"drinking\", support: \"\"},\r\n        bisognare: { term: \"bisognare\", definition: \"bisognare\", support: \"\"},\r\n        bruciare: { term: \"bruciare\", definition: \"burn\", support: \"\"},\r\n        buttare: { term: \"buttare\", definition: \"throw\", support: \"\"},\r\n        cadere: { term: \"cadere\", definition: \"fall\", support: \"\"},\r\n        cambiare: { term: \"cambiare\", definition: \"change\", support: \"\"},\r\n        camminare: { term: \"camminare\", definition: \"walk\", support: \"\"},\r\n        cantare: { term: \"cantare\", definition: \"sing\", support: \"\"},\r\n        capire: { term: \"capire\", definition: \"understand\", support: \"\"},\r\n        capitare: { term: \"capitare\", definition: \"happen\", support: \"\"},\r\n        celebrare: { term: \"celebrare\", definition: \"celebrate\", support: \"\"},\r\n        cercare: { term: \"cercare\", definition: \"search\", support: \"\"},\r\n        chiamare: { term: \"chiamare\", definition: \"call\", support: \"\"},\r\n        chiedere: { term: \"chiedere\", definition: \"ask\", support: \"\"},\r\n        chiudere: { term: \"chiudere\", definition: \"close\", support: \"\"},\r\n        colpire: { term: \"colpire\", definition: \"hit\", support: \"\"},\r\n        cominciare: { term: \"cominciare\", definition: \"begin\", support: \"\"},\r\n        compiere: { term: \"compiere\", definition: \"fulfill\", support: \"\"},\r\n        comporre: { term: \"comporre\", definition: \"compose\", support: \"\"},\r\n        comprendere: { term: \"comprendere\", definition: \"understand\", support: \"\"},\r\n        comprare: { term: \"comprare\", definition: \"buy\", support: \"\"},\r\n        concedere: { term: \"concedere\", definition: \"grant\", support: \"\"},\r\n        concludere: { term: \"concludere\", definition: \"conclude\", support: \"\"},\r\n        condurre: { term: \"condurre\", definition: \"lead\", support: \"\"},\r\n        confessare: { term: \"confessare\", definition: \"confess\", support: \"\"},\r\n        conoscere: { term: \"conoscere\", definition: \"know\", support: \"\"},\r\n        consentire: { term: \"consentire\", definition: \"allow\", support: \"\"},\r\n        conservare: { term: \"conservare\", definition: \"save\", support: \"\"},\r\n        considerare: { term: \"considerare\", definition: \"consider\", support: \"\"},\r\n        contare: { term: \"contare\", definition: \"count\", support: \"\"},\r\n        contenere: { term: \"contenere\", definition: \"contain\", support: \"\"},\r\n        continuare: { term: \"continuare\", definition: \"continue\", support: \"\"},\r\n        convincere: { term: \"convincere\", definition: \"convince\", support: \"\"},\r\n        coprire: { term: \"coprire\", definition: \"cover\", support: \"\"},\r\n        correre: { term: \"correre\", definition: \"run\", support: \"\"},\r\n        costituire: { term: \"costituire\", definition: \"constitute\", support: \"\"},\r\n        costringere: { term: \"costringere\", definition: \"force\", support: \"\"},\r\n        costruire: { term: \"costruire\", definition: \"build\", support: \"\"},\r\n        creare: { term: \"creare\", definition: \"create\", support: \"\"},\r\n        credere: { term: \"credere\", definition: \"believe\", support: \"\"},\r\n        crescere: { term: \"crescere\", definition: \"grow\", support: \"\"},\r\n        dare: { term: \"dare\", definition: \"give\", support: \"\"},\r\n        decidere: { term: \"decidere\", definition: \"decide\", support: \"\"},\r\n        dedicare: { term: \"dedicare\", definition: \"devote\", support: \"\"},\r\n        descrivere: { term: \"descrivere\", definition: \"describe\", support: \"\"},\r\n        desiderare: { term: \"desiderare\", definition: \"wish\", support: \"\"},\r\n        determinare: { term: \"determinare\", definition: \"determine\", support: \"\"},\r\n        dichiarare: { term: \"dichiarare\", definition: \"declare\", support: \"\"},\r\n        difendere: { term: \"difendere\", definition: \"defend\", support: \"\"},\r\n        diffondere: { term: \"diffondere\", definition: \"spread\", support: \"\"},\r\n        dimenticare: { term: \"dimenticare\", definition: \"forget\", support: \"\"},\r\n        dimostrare: { term: \"dimostrare\", definition: \"show\", support: \"\"},\r\n        dipendere: { term: \"dipendere\", definition: \"depend\", support: \"\"},\r\n        dire: { term: \"dire\", definition: \"say\", support: \"\"},\r\n        dirigere: { term: \"dirigere\", definition: \"direct\", support: \"\"},\r\n        discutere: { term: \"discutere\", definition: \"discuss\", support: \"\"},\r\n        disporre: { term: \"disporre\", definition: \"have\", support: \"\"},\r\n        distinguere: { term: \"distinguere\", definition: \"distinguish\", support: \"\"},\r\n        distruggere: { term: \"distruggere\", definition: \"destroy\", support: \"\"},\r\n        diventare: { term: \"diventare\", definition: \"become\", support: \"\"},\r\n        divenire: { term: \"divenire\", definition: \"become\", support: \"\"},\r\n        divertire: { term: \"divertire\", definition: \"entertain\", support: \"\"},\r\n        dividere: { term: \"dividere\", definition: \"divide\", support: \"\"},\r\n        domandare: { term: \"domandare\", definition: \"ask\", support: \"\"},\r\n        dormire: { term: \"dormire\", definition: \"sleep\", support: \"\"},\r\n        dovere: { term: \"dovere\", definition: \"duty\", support: \"\"},\r\n        durare: { term: \"durare\", definition: \"last\", support: \"\"},\r\n        elevare: { term: \"elevare\", definition: \"elevate\", support: \"\"},\r\n        entrare: { term: \"entrare\", definition: \"enter\", support: \"\"},\r\n        escludere: { term: \"escludere\", definition: \"exclude\", support: \"\"},\r\n        esistere: { term: \"esistere\", definition: \"exist\", support: \"\"},\r\n        esporre: { term: \"esporre\", definition: \"expose\", support: \"\"},\r\n        esprimere: { term: \"esprimere\", definition: \"express\", support: \"\"},\r\n        essere: { term: \"essere\", definition: \"be\", support: \"\"},\r\n        estendere: { term: \"estendere\", definition: \"extend\", support: \"\"},\r\n        evitare: { term: \"evitare\", definition: \"avoid\", support: \"\"},\r\n        ferire: { term: \"ferire\", definition: \"hurt\", support: \"\"},\r\n        fermare: { term: \"fermare\", definition: \"stop\", support: \"\"},\r\n        figurare: { term: \"figurare\", definition: \"appear\", support: \"\"},\r\n        finire: { term: \"finire\", definition: \"end\", support: \"\"},\r\n        fissare: { term: \"fissare\", definition: \"fix\", support: \"\"},\r\n        fondare: { term: \"fondare\", definition: \"found\", support: \"\"},\r\n        formare: { term: \"formare\", definition: \"form\", support: \"\"},\r\n        fornire: { term: \"fornire\", definition: \"provide\", support: \"\"},\r\n        fuggire: { term: \"fuggire\", definition: \"flee\", support: \"\"},\r\n        fumare: { term: \"fumare\", definition: \"smoke\", support: \"\"},\r\n        gettare: { term: \"gettare\", definition: \"throw\", support: \"\"},\r\n        giocare: { term: \"giocare\", definition: \"play\", support: \"\"},\r\n        girare: { term: \"girare\", definition: \"turn\", support: \"\"},\r\n        giudicare: { term: \"giudicare\", definition: \"judge\", support: \"\"},\r\n        giungere: { term: \"giungere\", definition: \"reach\", support: \"\"},\r\n        godere: { term: \"godere\", definition: \"be happy\", support: \"\"},\r\n        gridare: { term: \"gridare\", definition: \"shout\", support: \"\"},\r\n        guardare: { term: \"guardare\", definition: \"look\", support: \"\"},\r\n        guidare: { term: \"guidare\", definition: \"lead\", support: \"\"},\r\n        immaginare: { term: \"immaginare\", definition: \"imagine\", support: \"\"},\r\n        imparare: { term: \"imparare\", definition: \"learn\", support: \"\"},\r\n        impedire: { term: \"impedire\", definition: \"prevent\", support: \"\"},\r\n        importare: { term: \"importare\", definition: \"import\", support: \"\"},\r\n        imporre: { term: \"imporre\", definition: \"impose\", support: \"\"},\r\n        incontrare: { term: \"incontrare\", definition: \"meet\", support: \"\"},\r\n        indicare: { term: \"indicare\", definition: \"indicate\", support: \"\"},\r\n        iniziare: { term: \"iniziare\", definition: \"start\", support: \"\"},\r\n        innamorare: { term: \"innamorare\", definition: \"fall in love\", support: \"\"},\r\n        insegnare: { term: \"insegnare\", definition: \"teach\", support: \"\"},\r\n        insistere: { term: \"insistere\", definition: \"insist\", support: \"\"},\r\n        intendere: { term: \"intendere\", definition: \"hear\", support: \"\"},\r\n        interessare: { term: \"interessare\", definition: \"affect\", support: \"\"},\r\n        invitare: { term: \"invitare\", definition: \"invite\", support: \"\"},\r\n        lanciare: { term: \"lanciare\", definition: \"launch\", support: \"\"},\r\n        lasciare: { term: \"lasciare\", definition: \"leave\", support: \"\"},\r\n        lavorare: { term: \"lavorare\", definition: \"work\", support: \"\"},\r\n        legare: { term: \"legare\", definition: \"tie\", support: \"\"},\r\n        leggere: { term: \"leggere\", definition: \"read\", support: \"\"},\r\n        levare: { term: \"levare\", definition: \"upbeat\", support: \"\"},\r\n        liberare: { term: \"liberare\", definition: \"release\", support: \"\"},\r\n        limitare: { term: \"limitare\", definition: \"limit\", support: \"\"},\r\n        mancare: { term: \"mancare\", definition: \"miss\", support: \"\"},\r\n        mandare: { term: \"mandare\", definition: \"send\", support: \"\"},\r\n        mangiare: { term: \"mangiare\", definition: \"eat\", support: \"\"},\r\n        mantenere: { term: \"mantenere\", definition: \"keep\", support: \"\"},\r\n        meritare: { term: \"meritare\", definition: \"deserve\", support: \"\"},\r\n        mettere: { term: \"mettere\", definition: \"put\", support: \"\"},\r\n        morire: { term: \"morire\", definition: \"die\", support: \"\"},\r\n        mostrare: { term: \"mostrare\", definition: \"show\", support: \"\"},\r\n        muovere: { term: \"muovere\", definition: \"move\", support: \"\"},\r\n        nascere: { term: \"nascere\", definition: \"be born\", support: \"\"},\r\n        nascondere: { term: \"nascondere\", definition: \"hide\", support: \"\"},\r\n        notare: { term: \"notare\", definition: \"note\", support: \"\"},\r\n        occorrere: { term: \"occorrere\", definition: \"take\", support: \"\"},\r\n        offendere: { term: \"offendere\", definition: \"offend\", support: \"\"},\r\n        offrire: { term: \"offrire\", definition: \"offer\", support: \"\"},\r\n        opporre: { term: \"opporre\", definition: \"offer\", support: \"\"},\r\n        ordinare: { term: \"ordinare\", definition: \"order\", support: \"\"},\r\n        organizzare: { term: \"organizzare\", definition: \"organize\", support: \"\"},\r\n        osservare: { term: \"osservare\", definition: \"observe\", support: \"\"},\r\n        ottenere: { term: \"ottenere\", definition: \"get\", support: \"\"},\r\n        pagare: { term: \"pagare\", definition: \"pay\", support: \"\"},\r\n        parere: { term: \"parere\", definition: \"opinion\", support: \"\"},\r\n        parlare: { term: \"parlare\", definition: \"speak\", support: \"\"},\r\n        partecipare: { term: \"partecipare\", definition: \"take part\", support: \"\"},\r\n        partire: { term: \"partire\", definition: \"leave\", support: \"\"},\r\n        passare: { term: \"passare\", definition: \"switch\", support: \"\"},\r\n        pensare: { term: \"pensare\", definition: \"think\", support: \"\"},\r\n        perdere: { term: \"perdere\", definition: \"lose\", support: \"\"},\r\n        permettere: { term: \"permettere\", definition: \"allow\", support: \"\"},\r\n        pesare: { term: \"pesare\", definition: \"weigh\", support: \"\"},\r\n        piacere: { term: \"piacere\", definition: \"pleasure\", support: \"\"},\r\n        piangere: { term: \"piangere\", definition: \"cry\", support: \"\"},\r\n        piantare: { term: \"piantare\", definition: \"plant\", support: \"\"},\r\n        porre: { term: \"porre\", definition: \"place\", support: \"\"},\r\n        portare: { term: \"portare\", definition: \"bring\", support: \"\"},\r\n        posare: { term: \"posare\", definition: \"place\", support: \"\"},\r\n        possedere: { term: \"possedere\", definition: \"own\", support: \"\"},\r\n        potere: { term: \"potere\", definition: \"power\", support: \"\"},\r\n        preferire: { term: \"preferire\", definition: \"prefer\", support: \"\"},\r\n        pregare: { term: \"pregare\", definition: \"pray\", support: \"\"},\r\n        prendere: { term: \"prendere\", definition: \"take\", support: \"\"},\r\n        preoccupare: { term: \"preoccupare\", definition: \"worry\", support: \"\"},\r\n        preparare: { term: \"preparare\", definition: \"prepare\", support: \"\"},\r\n        presentare: { term: \"presentare\", definition: \"present\", support: \"\"},\r\n        prevedere: { term: \"prevedere\", definition: \"foresee\", support: \"\"},\r\n        procedere: { term: \"procedere\", definition: \"continue\", support: \"\"},\r\n        produrre: { term: \"produrre\", definition: \"produce\", support: \"\"},\r\n        promettere: { term: \"promettere\", definition: \"promise\", support: \"\"},\r\n        proporre: { term: \"proporre\", definition: \"propose\", support: \"\"},\r\n        provare: { term: \"provare\", definition: \"try\", support: \"\"},\r\n        provocare: { term: \"provocare\", definition: \"cause\", support: \"\"},\r\n        provvedere: { term: \"provvedere\", definition: \"provide\", support: \"\"},\r\n        pubblicare: { term: \"pubblicare\", definition: \"publish\", support: \"\"},\r\n        raccogliere: { term: \"raccogliere\", definition: \"gather\", support: \"\"},\r\n        raccontare: { term: \"raccontare\", definition: \"tell\", support: \"\"},\r\n        raggiungere: { term: \"raggiungere\", definition: \"reach\", support: \"\"},\r\n        rappresentare: { term: \"rappresentare\", definition: \"represent\", support: \"\"},\r\n        recare: { term: \"recare\", definition: \"cause\", support: \"\"},\r\n        rendere: { term: \"rendere\", definition: \"make\", support: \"\"},\r\n        resistere: { term: \"resistere\", definition: \"resist\", support: \"\"},\r\n        restare: { term: \"restare\", definition: \"stay\", support: \"\"},\r\n        ricevere: { term: \"ricevere\", definition: \"receive\", support: \"\"},\r\n        richiedere: { term: \"richiedere\", definition: \"request\", support: \"\"},\r\n        riconoscere: { term: \"riconoscere\", definition: \"recognize\", support: \"\"},\r\n        ricordare: { term: \"ricordare\", definition: \"remember\", support: \"\"},\r\n        ridere: { term: \"ridere\", definition: \"laugh\", support: \"\"},\r\n        ridurre: { term: \"ridurre\", definition: \"reduce\", support: \"\"},\r\n        riempire: { term: \"riempire\", definition: \"fill\", support: \"\"},\r\n        rientrare: { term: \"rientrare\", definition: \"re-enter\", support: \"\"},\r\n        riferire: { term: \"riferire\", definition: \"report\", support: \"\"},\r\n        rifiutare: { term: \"rifiutare\", definition: \"refuse\", support: \"\"},\r\n        riguardare: { term: \"riguardare\", definition: \"concern\", support: \"\"},\r\n        rimanere: { term: \"rimanere\", definition: \"stay\", support: \"\"},\r\n        rimettere: { term: \"rimettere\", definition: \"return\", support: \"\"},\r\n        ringraziare: { term: \"ringraziare\", definition: \"thank\", support: \"\"},\r\n        ripetere: { term: \"ripetere\", definition: \"repeat\", support: \"\"},\r\n        riportare: { term: \"riportare\", definition: \"report\", support: \"\"},\r\n        riprendere: { term: \"riprendere\", definition: \"resume\", support: \"\"},\r\n        risolvere: { term: \"risolvere\", definition: \"solve\", support: \"\"},\r\n        rispondere: { term: \"rispondere\", definition: \"answer\", support: \"\"},\r\n        risultare: { term: \"risultare\", definition: \"result\", support: \"\"},\r\n        ritenere: { term: \"ritenere\", definition: \"consider\", support: \"\"},\r\n        ritornare: { term: \"ritornare\", definition: \"return\", support: \"\"},\r\n        ritrovare: { term: \"ritrovare\", definition: \"find\", support: \"\"},\r\n        riunire: { term: \"riunire\", definition: \"gather\", support: \"\"},\r\n        riuscire: { term: \"riuscire\", definition: \"succeed\", support: \"\"},\r\n        rivedere: { term: \"rivedere\", definition: \"review\", support: \"\"},\r\n        rivelare: { term: \"rivelare\", definition: \"reveal\", support: \"\"},\r\n        rivolgere: { term: \"rivolgere\", definition: \"turn\", support: \"\"},\r\n        rompere: { term: \"rompere\", definition: \"break\", support: \"\"},\r\n        salire: { term: \"salire\", definition: \"go up\", support: \"\"},\r\n        saltare: { term: \"saltare\", definition: \"skip\", support: \"\"},\r\n        salutare: { term: \"salutare\", definition: \"healthy\", support: \"\"},\r\n        salvare: { term: \"salvare\", definition: \"save\", support: \"\"},\r\n        sapere: { term: \"sapere\", definition: \"know\", support: \"\"},\r\n        sbagliare: { term: \"sbagliare\", definition: \"make a mistake\", support: \"\"},\r\n        scappare: { term: \"scappare\", definition: \"escape\", support: \"\"},\r\n        scegliere: { term: \"scegliere\", definition: \"choose\", support: \"\"},\r\n        scendere: { term: \"scendere\", definition: \"get off\", support: \"\"},\r\n        scherzare: { term: \"scherzare\", definition: \"joke\", support: \"\"},\r\n        scomparire: { term: \"scomparire\", definition: \"disappear\", support: \"\"},\r\n        scoppiare: { term: \"scoppiare\", definition: \"burst\", support: \"\"},\r\n        scoprire: { term: \"scoprire\", definition: \"discover\", support: \"\"},\r\n        scorrere: { term: \"scorrere\", definition: \"slide\", support: \"\"},\r\n        scrivere: { term: \"scrivere\", definition: \"write\", support: \"\"},\r\n        scusare: { term: \"scusare\", definition: \"excuse\", support: \"\"},\r\n        sedere: { term: \"sedere\", definition: \"sit down\", support: \"\"},\r\n        segnare: { term: \"segnare\", definition: \"score\", support: \"\"},\r\n        seguire: { term: \"seguire\", definition: \"follow\", support: \"\"},\r\n        sembrare: { term: \"sembrare\", definition: \"look\", support: \"\"},\r\n        sentire: { term: \"sentire\", definition: \"feel\", support: \"\"},\r\n        servire: { term: \"servire\", definition: \"serve\", support: \"\"},\r\n        significare: { term: \"significare\", definition: \"mean\", support: \"\"},\r\n        smettere: { term: \"smettere\", definition: \"stop\", support: \"\"},\r\n        soffrire: { term: \"soffrire\", definition: \"suffer\", support: \"\"},\r\n        sognare: { term: \"sognare\", definition: \"dream\", support: \"\"},\r\n        sorgere: { term: \"sorgere\", definition: \"rise\", support: \"\"},\r\n        sorprendere: { term: \"sorprendere\", definition: \"surprise\", support: \"\"},\r\n        sorridere: { term: \"sorridere\", definition: \"smile\", support: \"\"},\r\n        sostenere: { term: \"sostenere\", definition: \"support\", support: \"\"},\r\n        spegnere: { term: \"spegnere\", definition: \"switch off\", support: \"\"},\r\n        sperare: { term: \"sperare\", definition: \"hope\", support: \"\"},\r\n        spiegare: { term: \"spiegare\", definition: \"explain\", support: \"\"},\r\n        spingere: { term: \"spingere\", definition: \"push\", support: \"\"},\r\n        sposare: { term: \"sposare\", definition: \"marry\", support: \"\"},\r\n        stabilire: { term: \"stabilire\", definition: \"establish\", support: \"\"},\r\n        staccare: { term: \"staccare\", definition: \"remove\", support: \"\"},\r\n        stare: { term: \"stare\", definition: \"stay\", support: \"\"},\r\n        stringere: { term: \"stringere\", definition: \"tighten\", support: \"\"},\r\n        studiare: { term: \"studiare\", definition: \"study\", support: \"\"},\r\n        succedere: { term: \"succedere\", definition: \"happen\", support: \"\"},\r\n        suonare: { term: \"suonare\", definition: \"play\", support: \"\"},\r\n        superare: { term: \"superare\", definition: \"exceed\", support: \"\"},\r\n        svegliare: { term: \"svegliare\", definition: \"wake\", support: \"\"},\r\n        svolgere: { term: \"svolgere\", definition: \"perform\", support: \"\"},\r\n        tacere: { term: \"tacere\", definition: \"be silent\", support: \"\"},\r\n        tagliare: { term: \"tagliare\", definition: \"cut\", support: \"\"},\r\n        temere: { term: \"temere\", definition: \"fear\", support: \"\"},\r\n        tendere: { term: \"tendere\", definition: \"stretch\", support: \"\"},\r\n        tenere: { term: \"tenere\", definition: \"hold\", support: \"\"},\r\n        tentare: { term: \"tentare\", definition: \"groped\", support: \"\"},\r\n        tirare: { term: \"tirare\", definition: \"pull\", support: \"\"},\r\n        toccare: { term: \"toccare\", definition: \"touch\", support: \"\"},\r\n        togliere: { term: \"togliere\", definition: \"remove\", support: \"\"},\r\n        tornare: { term: \"tornare\", definition: \"return\", support: \"\"},\r\n        trarre: { term: \"trarre\", definition: \"draw\", support: \"\"},\r\n        trascinare: { term: \"trascinare\", definition: \"drag\", support: \"\"},\r\n        trasformare: { term: \"trasformare\", definition: \"transform\", support: \"\"},\r\n        trattare: { term: \"trattare\", definition: \"treat\", support: \"\"},\r\n        trovare: { term: \"trovare\", definition: \"find\", support: \"\"},\r\n        uccidere: { term: \"uccidere\", definition: \"kill\", support: \"\"},\r\n        udire: { term: \"udire\", definition: \"hear\", support: \"\"},\r\n        unire: { term: \"unire\", definition: \"unite\", support: \"\"},\r\n        usare: { term: \"usare\", definition: \"use\", support: \"\"},\r\n        uscire: { term: \"uscire\", definition: \"go out\", support: \"\"},\r\n        valere: { term: \"valere\", definition: \"be worth\", support: \"\"},\r\n        vedere: { term: \"vedere\", definition: \"see\", support: \"\"},\r\n        vendere: { term: \"vendere\", definition: \"sell\", support: \"\"},\r\n        venire: { term: \"venire\", definition: \"come\", support: \"\"},\r\n        vestire: { term: \"vestire\", definition: \"dress\", support: \"\"},\r\n        vincere: { term: \"vincere\", definition: \"win\", support: \"\"},\r\n        vivere: { term: \"vivere\", definition: \"live\", support: \"\"},\r\n        volare: { term: \"volare\", definition: \"fly\", support: \"\"},\r\n        volere: { term: \"volere\", definition: \"want\", support: \"\"},\r\n        volgere: { term: \"volgere\", definition: \"turn\", support: \"\"},\r\n        voltare: { term: \"voltare\", definition: \"turn\", support: \"\"}\r\n    }\r\n}\r\n","\r\n// Imports\r\nimport { cl, clv, pickRandom } from 'helperFunctions';\r\nimport appData from 'verbs';\r\nimport ops from 'app';\r\n\r\n// Exports\r\nexport { getListOfTerms, updateDataCount };\r\n\r\n// Creates a list of terms\r\nconst getListOfTerms = function getListOfTerms() {\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n    let listOfTerms = [];\r\n    let scannedTerms = [];\r\n    const dataLength = Object.keys(appData.terms).length;\r\n\r\n    // Prevent overflow\r\n    if (ops.displayedTerms > dataLength) {\r\n        ops.displayedTerms = dataLength;\r\n    }\r\n\r\n    // First time app opened\r\n    if (ops.storedData.firstTime === undefined) {\r\n\r\n        while (i < ops.displayedTerms) {\r\n            let pickedTerm = pickRandom(appData.terms);\r\n\r\n            // Ensure term hasn't been already scanned\r\n            if (!listOfTerms.includes(pickedTerm)) {\r\n                listOfTerms.push(pickedTerm);\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    // App opened before\r\n    else {\r\n\r\n        // Add reminder for previous incorrect term\r\n        if (ops.storedData.incorrectTerms !== undefined) {\r\n            \r\n            let reminderTerm;\r\n\r\n            // Add reminded terms list\r\n            ops.storedData.remindedTerms = ops.storedData.remindedTerms || {};\r\n\r\n            // Keep reminded term the same\r\n            if (ops.storedData.dailyReminder === undefined) {\r\n                ops.storedData.dailyReminder = {};\r\n                reminderTerm = pickRandom(ops.storedData.incorrectTerms);\r\n                reminderTerm = Object.getOwnPropertyNames(reminderTerm);\r\n                ops.storedData.dailyReminder[reminderTerm] = appData.terms[reminderTerm].definition; \r\n            }\r\n            else { \r\n                reminderTerm = ops.storedData.dailyReminder;\r\n                reminderTerm = Object.getOwnPropertyNames(reminderTerm);\r\n            }\r\n            // Add to terms\r\n            listOfTerms.push(reminderTerm);\r\n            // Remove from incorrect terms\r\n            delete ops.storedData.incorrectTerms[reminderTerm];\r\n            // Add to list of reminded terms\r\n            ops.storedData.remindedTerms[reminderTerm] = appData.terms[reminderTerm].definition;\r\n            i++;\r\n        }\r\n        // Choose terms to  display\r\n        while (i < ops.displayedTerms) {\r\n            let viewedLength = Object.keys(ops.storedData.viewedTerms).length;\r\n\r\n            // If all terms viewed\r\n            if (viewedLength === dataLength) {\r\n\r\n                let viewedSorted = [];\r\n\r\n                // Convert viewed terms to array\r\n                for (let term in ops.storedData.viewedTerms) {\r\n                    viewedSorted.push([term, ops.storedData.viewedTerms[term]]);\r\n                }\r\n                // If reminder term picked remove from selection\r\n                if (ops.storedData.dailyReminder !== undefined) {\r\n                    for (let m=viewedSorted.length-1; m>=0; m--) {\r\n                        if (ops.storedData.dailyReminder.hasOwnProperty(viewedSorted[m][0])) { \r\n                            viewedSorted.splice(m, 1);\r\n                        }\r\n                    }\r\n                }\r\n                // Sort array by view count\r\n                viewedSorted.sort((a, b) => {\r\n                    return a[1] - b[1]\r\n                })\r\n                // Finish off iterator with lowest viewed terms\r\n                while (i < ops.displayedTerms) {\r\n                    listOfTerms.push(viewedSorted[i][0]);\r\n                    i++;\r\n                }\r\n                // Overflow protection\r\n                i++;\r\n            }\r\n            // Still unviewed terms in data\r\n            else {\r\n                let pickedTerm = pickRandom(appData.terms);\r\n\r\n                // Ensure term hasn't been already scanned\r\n                if (!scannedTerms.includes(pickedTerm)) {\r\n                    scannedTerms.push(pickedTerm);\r\n\r\n                    // Ensure term not viewed before\r\n                    if (!ops.storedData.viewedTerms.hasOwnProperty(pickedTerm)) {\r\n                        listOfTerms.push(pickedTerm);\r\n                        ops.storedData.viewedTerms[pickedTerm] = 0;\r\n                        localforage.setItem('ops.storedData', ops.storedData);\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n            // Overflow protection\r\n            if (j > 10000) {\r\n                i = ops.displayedTerms;\r\n            }\r\n            j++;\r\n        }\r\n    }\r\n    // Return final list of terms\r\n    return listOfTerms;\r\n}\r\n\r\n// Handles count of a type of data\r\nconst updateDataCount = function (dataType, termsToAdjust, baseValue) {\r\n\r\n    let dataTypeHolder = ops.storedData[dataType] || {};\r\n\r\n    // If no viewed data, create new \r\n    if (!ops.storedData.hasOwnProperty(dataType)) {\r\n\r\n        for (let value of termsToAdjust) {\r\n            dataTypeHolder[value] = baseValue;\r\n        }\r\n    }\r\n    // If viewed data exists\r\n    else {\r\n        // If viewed term exists, update count\r\n        for (let value of termsToAdjust) {\r\n\r\n            if (ops.storedData[dataType].hasOwnProperty(value)) {\r\n                let count = ops.storedData[dataType][value];\r\n                count += 1;\r\n                dataTypeHolder[value] = count;\r\n            }\r\n            else {\r\n                dataTypeHolder[termsToAdjust] = baseValue;\r\n            }\r\n        }\r\n    }\r\n    // Pass back final object\r\n    return dataTypeHolder;\r\n}","\r\n// Imports\r\nimport { cl, clv } from 'helperFunctions';\r\nimport appData from 'verbs';\r\nimport ops from 'app';\r\nimport { createRevealTimer } from 'termInteraction';\r\n\r\n// Exports\r\nexport { viewCreate, addHearts, setScore };\r\n\r\n// Create app view\r\nconst viewCreate = function viewCreate(termsToCreate) {\r\n\r\n    let viewHTML = \"\";\r\n\r\n    // Create HTML for terms\r\n    for (let value of termsToCreate) {\r\n\r\n        // Get terms and definitions from data\r\n        let termValue = appData.terms[value].term;\r\n        let definitionValue = appData.terms[value].definition;\r\n        let supportValue = appData.terms[value].support;\r\n        let revealCounter;\r\n        let viewsCount;\r\n\r\n        // Check storage for revealed count\r\n        if (ops.storedData.revealedTermCount === undefined) {\r\n            viewsCount = 0;\r\n        }\r\n        else {\r\n            viewsCount = ops.storedData.revealedTermCount[value] || 0;\r\n        }\r\n\r\n        // Create terms HTML\r\n        let newHolder =\r\n            `<div class=\"term-wrapper\">\r\n                <p class=\"term-holder\">${termValue}</p>\r\n                <div class=\"definition-wrapper hidden\">\r\n                    <p class=\"definition-holder\">${definitionValue}</p>\r\n                    <div class=\"support-wrapper\">${supportValue}</div>\r\n                </div>\r\n                <p class=\"term-views\">${viewsCount}</p>\r\n                <button class=\"reveal\">Reveal definition</button>\r\n            </div>`;\r\n\r\n        viewHTML += newHolder;\r\n        // Cycle for of loop\r\n    }\r\n    // Add to view\r\n    ops.container.innerHTML = viewHTML;\r\n\r\n    // Add countdown timers to term buttons\r\n    for (let value of termsToCreate) {\r\n\r\n        // Check if timer data exists\r\n        if (ops.storedData.revealCountdowns !== undefined) {\r\n\r\n            // Add countdown timers to buttons\r\n            if (ops.storedData.revealCountdowns[value] !== undefined) {\r\n\r\n                let revealBtn = document.querySelectorAll('.reveal');\r\n\r\n                // Find button node that matches term in DOM\r\n                for (let i = 0; i < revealBtn.length; i++) {\r\n                    let revealTerm = revealBtn[i].parentNode.querySelector('.term-holder').innerHTML;\r\n\r\n                    if (revealTerm === value) {\r\n                        createRevealTimer(revealBtn[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Add hearts to page\r\nconst addHearts = function addHearts() {\r\n    let heartHolder = document.querySelector('.hearts');\r\n    let heartsHTML = \"\";\r\n\r\n    // If no hearts data exists\r\n    if (ops.storedData.hearts === undefined) {\r\n        ops.storedData.hearts = ops.points.hearts;\r\n    }\r\n    for (let i = 0; i < ops.storedData.hearts; i++) {\r\n        heartsHTML += '<p>❤</p>';\r\n    }\r\n    // Add to view\r\n    heartHolder.innerHTML = heartsHTML;\r\n\r\n    // Add to storage\r\n    localforage.setItem('ops.storedData', ops.storedData);\r\n}\r\n\r\n\r\n// Sets the score\r\nconst setScore = function setScore() {\r\n\r\n    let scoreHolder = document.querySelector('.score-holder');\r\n\r\n    // Set score if it doesn't exist\r\n    if (ops.storedData.score === undefined) {\r\n        ops.storedData.score = 0;\r\n    }\r\n    \r\n    let score = ops.storedData.score;\r\n\r\n    // Add to view\r\n    scoreHolder.innerHTML = score;\r\n}","\r\n// Imports\r\nimport { cl, clv, pickRandom, checkQuery } from 'helperFunctions';\r\nimport appData from 'verbs';\r\nimport ops from 'app';\r\nimport { addHearts } from 'viewCreation';\r\nimport { updateDataCount } from 'termCreation';\r\n\r\n// Exports\r\nexport { createNewQuery };\r\n\r\n// Sets up query\r\nconst createNewQuery = function createNewQuery() {\r\n\r\n    // If no stored data for reveal countdowns\r\n    if (ops.storedData.queryTerms === undefined) {\r\n        ops.storedData.queryTerms = {};\r\n    }\r\n\r\n    // Pick a term for query\r\n    let randomTerm;\r\n    let i = 0;\r\n\r\n    // Set correctTerms storage if not exists\r\n    if (ops.storedData.correctTerms === undefined) {\r\n        ops.storedData.correctTerms = {};\r\n    }\r\n\r\n    // Set incorrectTerms storage if not exists\r\n    if (ops.storedData.incorrectTerms === undefined) {\r\n        ops.storedData.incorrectTerms = {};\r\n    }\r\n\r\n    // Prevent choosing query already answered correct\r\n    while (i < Object.keys(ops.storedData.revealedTermCount).length) {\r\n\r\n        if (ops.storedData.dailyQuery === undefined) {\r\n            // Pick a random term\r\n            randomTerm = pickRandom(ops.storedData.revealedTermCount);\r\n            ops.storedData.dailyQuery = randomTerm;\r\n        }\r\n        else {\r\n            randomTerm = ops.storedData.dailyQuery;\r\n        }\r\n        // If query not from correct terms\r\n        if (!ops.storedData.correctTerms.hasOwnProperty(randomTerm)) {\r\n\r\n            // If query not from daily reminder term\r\n            if (ops.storedData.dailyReminder !== undefined) {\r\n                if (!ops.storedData.dailyReminder.hasOwnProperty(randomTerm)) {\r\n                    queryHandler();\r\n                    break;\r\n                }\r\n            }\r\n            // If query not from daily terms\r\n            else if (!ops.storedData.dailyTerms.hasOwnProperty(randomTerm)) {\r\n                queryHandler();\r\n                break;\r\n            }\r\n        }\r\n        // Else look for another\r\n        i++;\r\n        if (i === Object.keys(ops.storedData.revealedTermCount).length) {\r\n            document.querySelector('.result-holder').innerHTML = \"Reveal more terms to get a query\";\r\n        }\r\n    }\r\n    \r\n    // Build the query\r\n    function queryHandler() {\r\n        let queryWrapper = document.querySelector('.query-wrapper');\r\n        let queryHolder = document.querySelector('.query-holder');\r\n        let querySubmit = document.querySelector('.query-submit');\r\n        let resultHolder = document.querySelector('.result-holder');\r\n        let scoreHolder = document.querySelector('.score-holder');\r\n        let heartHolder = document.querySelector('.hearts');\r\n        let score = parseInt(scoreHolder.innerHTML);\r\n        let definition = appData.terms[randomTerm].definition;\r\n        let count = 0;\r\n\r\n        // Add hearts\r\n        delete ops.storedData.hearts;\r\n        addHearts();\r\n\r\n        // Show the query wrapper\r\n        queryWrapper.classList.remove('hidden');\r\n\r\n        // Set value of query\r\n        queryHolder.innerHTML = randomTerm;\r\n\r\n        // Query outcomes\r\n        querySubmit.addEventListener(\"click\", () => {\r\n            let queryInput = document.querySelector('.query-input').value;\r\n\r\n            if (checkQuery(queryInput, definition) === true) {\r\n                winCase();\r\n            }\r\n            else if (checkQuery(queryInput, definition) === \"mispelled\") {\r\n                winCase(\"mispelled\");\r\n            }\r\n            else if (queryInput === \"\") {\r\n                resultHolder.innerHTML = \"Enter a definition.\";\r\n            }\r\n            else {\r\n                loseCase();\r\n            }\r\n        });\r\n\r\n        // If definition is right\r\n        function winCase(spelling) {\r\n            // Hide the query input\r\n            queryWrapper.classList.add('hidden');\r\n            heartHolder.classList.add('hidden');\r\n            // If mispelled\r\n            if (spelling === \"mispelled\") {\r\n                // Display win message\r\n                resultHolder.innerHTML = \"Well done but check your spelling, the definition for <strong>\\\"\" + randomTerm + \"\\\"</strong> is <strong>\\\"\" + definition + \"\\\"</strong>\";\r\n            }\r\n            else {\r\n                // Display win message\r\n                resultHolder.innerHTML = \"Well done, the definition for <strong>\\\"\" + randomTerm + \"\\\"</strong> is <strong>\\\"\" + definition + \"\\\"</strong>\";\r\n            }\r\n            // Add to score\r\n            score += ops.points.correct;\r\n            // Update view\r\n            scoreHolder.innerHTML = score;\r\n            // Add to stored data\r\n            ops.storedData.score = score;\r\n            ops.storedData.correctTerms[randomTerm] = definition;\r\n            ops.storedData.queryComplete = true;\r\n            delete ops.storedData.dailyQuery;\r\n            // Check if whole term list answered correctly\r\n            if (Object.keys(ops.storedData.correctTerms).length === Object.keys(appData.terms).length) {\r\n                ops.storedData.gameWon = true;\r\n                gameWon();\r\n            }\r\n            // Save to storage\r\n            localforage.setItem('ops.storedData', ops.storedData);\r\n        }\r\n        // If definition is wrong\r\n        function loseCase() {\r\n            let queryInput = document.querySelector('.query-input');\r\n            // Update view\r\n            resultHolder.innerHTML = \"Try again.\";\r\n            // Add placeholder\r\n            queryInput.placeholder = queryInput.value;\r\n            // Remove guess\r\n            queryInput.value = \"\";\r\n            // Lose a heart\r\n            heartHolder.removeChild(heartHolder.getElementsByTagName('p')[0]);\r\n            ops.storedData.hearts -= 1;\r\n            // If all hearts lost\r\n            if (ops.storedData.hearts === 0) {\r\n                // Hide query \r\n                queryWrapper.classList.add('hidden');\r\n                heartHolder.classList.add('hidden');\r\n                // Update DOM\r\n                queryInput.value = \"\";\r\n                queryInput.placeholder = \"Enter the definition\";\r\n                // Update view\r\n                resultHolder.innerHTML = \"Sorry you lose.\";\r\n                // Add to storedDatta \r\n                ops.storedData.incorrectTerms[randomTerm] = definition;\r\n                cl(ops.storedData.incorrectTerms);\r\n                ops.storedData.queryComplete = true;\r\n                delete ops.storedData.hearts;\r\n            }\r\n            // Save to storage\r\n            localforage.setItem('ops.storedData', ops.storedData);\r\n        }\r\n        // If game won\r\n        function gameWon() {\r\n            cl('game won');\r\n        }\r\n    }\r\n}","\r\n// Imports\r\nimport { cl, clv, clickListener } from 'helperFunctions';\r\nimport appData from 'verbs';\r\nimport ops from 'app';\r\nimport { createNewQuery } from 'queryInteraction';\r\nimport { updateDataCount } from 'termCreation';\r\nimport { setScore, addHearts } from 'viewCreation';\r\n\r\n// Exports\r\nexport { revealedBtnHandler, createRevealTimer };\r\n\r\n// Handles functions when reveal button clicked\r\nconst revealedBtnHandler = function revealedBtnHandler() {\r\n\r\n    let revealBtn = document.querySelectorAll('.reveal');\r\n\r\n    clickListener(revealBtn, (i) => {\r\n\r\n        // Disabled button prevention\r\n        if (revealBtn[i].classList.contains('disabled')) {\r\n            return false;\r\n        }\r\n\r\n        let term = [revealBtn[i].parentNode.querySelector('.term-holder').innerHTML];\r\n\r\n        // Updates the revealed view counter\r\n        let countHolder = revealBtn[i].parentNode.querySelector('.term-views');\r\n        let definitionWrapper = revealBtn[i].parentNode.querySelector('.definition-wrapper');\r\n        let definitionHolder = revealBtn[i].parentNode.querySelector('.definition-holder');\r\n        let count = parseInt(countHolder.innerHTML);\r\n\r\n        // Show definition\r\n        definitionWrapper.classList.remove('hidden');\r\n\r\n        // Increase count by one\r\n        countHolder.innerHTML = count + 1;\r\n\r\n        // Pass to updateDataCount function\r\n        let dataCount = updateDataCount('revealedTermCount', term, 1);\r\n\r\n        // Set storedData\r\n        ops.storedData.revealedTermCount = dataCount;\r\n\r\n        // Daily reveal bonus\r\n        let revealBonusCount;\r\n\r\n        // If no daily bonus data\r\n        if (ops.storedData.revealDailyBonus === undefined) {\r\n            ops.storedData.revealDailyBonus = {};\r\n        }\r\n        // If no existing term bonus\r\n        if (ops.storedData.revealDailyBonus[term] === undefined) {\r\n            revealBonusCount = 1;\r\n        }\r\n        // Add one to daily bonus\r\n        else {\r\n            revealBonusCount = ops.storedData.revealDailyBonus[term];\r\n            revealBonusCount += 1;\r\n        }\r\n        // If bonus is met\r\n        if (revealBonusCount === ops.revealDailyBonusTarget) {\r\n            // If daily bonus not already triggered\r\n            if (ops.storedData.revealDailyBonus.complete === false) {\r\n                // Keep query active \r\n                ops.storedData.queryComplete = false;\r\n                // Create a new query\r\n                createNewQuery();\r\n            }\r\n            // Set only once a day\r\n            ops.storedData.revealDailyBonus.complete = true;\r\n            ops.storedData.score += ops.points.dailyBonus;\r\n            setScore();\r\n        }\r\n        ops.storedData.revealDailyBonus[term] = revealBonusCount;\r\n\r\n        // Save to storage\r\n        localforage.setItem('ops.storedData', ops.storedData);\r\n\r\n        // Starts a timer \r\n        createRevealTimer(revealBtn[i]);\r\n    });\r\n}\r\n\r\n// Adds a timer to the reveal button\r\nconst createRevealTimer = function createRevealTimer(revealBtn) {\r\n\r\n    // If no stored data for reveal countdowns\r\n    if (ops.storedData.revealCountdowns === undefined) {\r\n        ops.storedData.revealCountdowns = {};\r\n    }\r\n\r\n    let term = [revealBtn.parentNode.querySelector('.term-holder').innerHTML];\r\n\r\n    let minutes = ops.counterMins;\r\n    let seconds = ops.counterSecs;\r\n    let remainingMinutes;\r\n    let remainingSeconds;\r\n    let startTime;\r\n    let timerEnded;\r\n\r\n    // New timer\r\n    if (ops.storedData.revealCountdowns[term] === undefined) {\r\n\r\n        // Get a new time\r\n        startTime = new Date().getTime();\r\n\r\n        // Set storedData\r\n        ops.storedData.revealCountdowns[term] = {\r\n            \"startTime\": startTime,\r\n            \"timerEnded\": false\r\n        };\r\n\r\n        // Start timer\r\n        startTimer();\r\n    }\r\n    // Existing timer\r\n    else {\r\n        // Start timer\r\n        startTimer();\r\n    }\r\n\r\n    function startTimer() {\r\n        let nowTime = new Date().getTime();\r\n\r\n        // Disable button\r\n        revealBtn.classList.add('disabled');\r\n        revealBtn.setAttribute(\"disabled\", true);\r\n\r\n        // Get terms start time for countdown\r\n        startTime = ops.storedData.revealCountdowns[term].startTime;\r\n        timerEnded = ops.storedData.revealCountdowns[term].timerEnded;\r\n\r\n        // Get difference in seconds\r\n        let diffSecs = Math.floor((nowTime - startTime) / 1000);\r\n        // Get total in seconds\r\n        let totalSecs = (ops.counterMins * 60) + seconds;\r\n\r\n        // NowTime overtaken startTime\r\n        if (diffSecs >= totalSecs) {\r\n            timerEnded = true;\r\n            // Stop interval\r\n            clearInterval(ops.storedData.revealCountdowns[term].timerUpdate);\r\n            // Clear storage for term timer\r\n            delete ops.storedData.revealCountdowns[term];\r\n        }\r\n        // Timer stopped, return to normal\r\n        if (timerEnded === true) {\r\n            localforage.setItem('ops.storedData', ops.storedData);\r\n            return false;\r\n        }\r\n        // Set remaining time \r\n        remainingSeconds = totalSecs - diffSecs;\r\n    }\r\n\r\n    // Set start time to storage\r\n    localforage.setItem('ops.storedData', ops.storedData);\r\n\r\n    let timeout;\r\n    let checkCount = 0;\r\n\r\n    // If timer is active   \r\n    if (timerEnded === false) {\r\n\r\n        // Start timer interval\r\n        ops.storedData.revealCountdowns[term].timerUpdate = setInterval(() => {\r\n            // Resync timer in some devices when off screen\r\n            checkCount += 1;\r\n            if (checkCount % 5 === 0) {\r\n                startTimer();\r\n            }\r\n            // Call UI timer build\r\n            buttonTimer();\r\n        }, 1000)\r\n    }\r\n\r\n    // Builds the timer\r\n    function buttonTimer() {\r\n        let displayedMinutes = Math.floor(remainingSeconds / 60);\r\n        let displayedSeconds = remainingSeconds % 60;\r\n        let hiddenZero = '';\r\n\r\n        // Timer end\r\n        if (remainingSeconds === 0) {\r\n            revealBtn.innerHTML = (\"Reveal\");\r\n            revealBtn.classList.remove('disabled');\r\n            revealBtn.disabled = false;\r\n            return false;\r\n        }\r\n\r\n        // Handle issues like zero index\r\n        if (displayedSeconds < 10 && displayedSeconds >= 0) {\r\n            hiddenZero = '0';\r\n        }\r\n        if (remainingSeconds === 60) {\r\n            displayedSeconds = '00';\r\n        }\r\n        // Update DOM\r\n        revealBtn.innerHTML = (displayedMinutes + ':' + hiddenZero + displayedSeconds);\r\n\r\n        // Decrease timer\r\n        remainingSeconds -= 1;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n"]}