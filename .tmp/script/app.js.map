{"version":3,"sources":["app.js","helperFunctions.js","verbs.js","termCreation.js","termInteraction.js","viewCreation.js","queryInteraction.js"],"names":["app","ready","fn","document","readyState","addEventListener","cl","log","console","checkSameDay","todaysDate","getTodaysDate","storedDate","Array","from","ops","storedData","dateOpened","arrayCheck","addDay","newDay","todayDate","day","Date","getDate","month","getMonth","push","arr1","arr2","JSON","stringify","resetData","querySelector","e","preventDefault","localforage","clear","clickListener","elements","clickFunction","i","length","pickRandom","objectList","keys","Object","pickedTerm","Math","random","appData","terms","verb_1","term","definition","support","verb_2","verb_3","verb_4","verb_5","getListOfTerms","j","listOfTerms","scannedTerms","dataLength","displayedTerms","firstTime","undefined","includes","viewedLength","viewedTerms","viewedSorted","sort","a","b","hasOwnProperty","setItem","updateDataCount","dataType","termsToAdjust","baseValue","dataTypeHolder","value","count","revealedBtnHandler","revealBtn","querySelectorAll","classList","contains","parentNode","innerHTML","countHolder","definitionWrapper","definitionHolder","parseInt","remove","dataCount","revealedTermCount","createRevealTimer","revealCountdowns","minutes","counterMins","seconds","counterSecs","remainingMinutes","remainingSeconds","startTime","timerEnded","getTime","startTimer","nowTime","diffSecs","floor","totalSecs","timeout","checkCount","timerUpdate","setInterval","buttonTimer","displayedMinutes","displayedSeconds","hiddenZero","disabled","clearInterval","add","setAttribute","viewCreate","termsToCreate","viewHTML","termValue","definitionValue","supportValue","revealCounter","viewsCount","newHolder","container","revealTerm","addHearts","heartHolder","heartsHTML","hearts","points","setScore","scoreHolder","score","createNewQuery","queryTerms","randomTerm","correctTerms","incorrectTerms","buildQuery","queryWrapper","queryHolder","querySubmit","resultHolder","heartCount","queryInput","toUpperCase","winCase","loseCase","correct","gameWon","placeholder","removeChild","getElementsByTagName","debug","checkFirstTime","then","numberOfKeys","initialise","catch","err","appBuildHandler","getItem","checkData","retrievedData","pickedTerms","dailyTerms","ops$1"],"mappings":"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","file":"app.js","sourcesContent":["\r\n// Imports\r\nimport { ready, cl, clv, checkSameDay, resetData, arrayCheck, getTodaysDate } from 'helperFunctions';\r\nimport { getListOfTerms, updateDataCount } from 'termCreation';\r\nimport { revealedBtnHandler } from 'termInteraction';\r\nimport { viewCreate, addHearts, setScore } from 'viewCreation';\r\nimport { createNewQuery } from 'queryInteraction';\r\n\r\n// Exports\r\nexport default ops;\r\n\r\n// Global options\r\nlet ops = {\r\n    displayedTerms: 3,\r\n    counterMins: 60,\r\n    counterSecs: 0,\r\n    container: document.querySelector(\".terms-wrapper\"),\r\n    addDay: true,\r\n    debug: true,\r\n    points: {\r\n        correct: 50,\r\n        hearts: 3\r\n    },\r\n    storedData: {}\r\n}\r\n\r\n// Initialise modules on load\r\nready(function () {\r\n    'use strict';\r\n    checkFirstTime();\r\n    // Resets button\r\n    resetData();\r\n});\r\n\r\n// Runs when app opens\r\nconst checkFirstTime = function checkFirstTime() {\r\n\r\n    // Check if this is the first time app has run\r\n    localforage.length().then(numberOfKeys => {\r\n\r\n        // If first time\r\n        if (numberOfKeys === 0) {\r\n            firstTime();\r\n        }\r\n        // Not first time\r\n        else {\r\n            ops.storedData.firstTime = false;\r\n            initialise();\r\n        }\r\n    }).catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\n// Runs if first time app has run\r\nconst firstTime = function firstTime() {\r\n\r\n    // Create terms\r\n    appBuildHandler();\r\n\r\n    // Set first time to false\r\n    ops.storedData.firstTime = false;\r\n\r\n    // Add to storage\r\n    localforage.setItem('ops.storedData', ops.storedData);\r\n}\r\n\r\n// Initialises data and app\r\nconst initialise = function initialise() {\r\n\r\n    // Get stored data\r\n    localforage.getItem('ops.storedData').then(retrievedData => {\r\n        checkData(retrievedData);\r\n    }).catch(err => {\r\n        console.log(err);\r\n    });\r\n\r\n    // Handle retrieved data\r\n    function checkData(retrievedData) {\r\n\r\n        // Set data in app from storage\r\n        ops.storedData = retrievedData;\r\n\r\n        // Check if a new day\r\n        checkSameDay();\r\n\r\n        // Start build\r\n        appBuildHandler();\r\n    }\r\n}\r\n\r\n// Calls functions to handle app creation and running\r\nconst appBuildHandler = function appBuildHandler() {\r\n\r\n    // Get initial terms\r\n    let pickedTerms;\r\n\r\n    // If same day, used daily terms\r\n    if (ops.storedData.newDay === false) {\r\n        pickedTerms = ops.storedData.dailyTerms;\r\n    }\r\n    // Else get new  \r\n    else {\r\n        pickedTerms = getListOfTerms();\r\n    }\r\n\r\n    // Create initial view\r\n    viewCreate(pickedTerms);\r\n    addHearts();\r\n    setScore();\r\n\r\n    // Create opened date, daily terms, viewed terms\r\n    ops.storedData.dateOpened = getTodaysDate();\r\n    ops.storedData.dailyTerms = pickedTerms;\r\n    ops.storedData.viewedTerms = updateDataCount('viewedTerms', pickedTerms, 0);\r\n\r\n    // Add to storage\r\n    localforage.setItem('ops.storedData', ops.storedData);\r\n\r\n    // Handles events for revealed terms\r\n    revealedBtnHandler();\r\n\r\n    // Create query if revealed terms\r\n    if (ops.storedData.revealedTermCount !== undefined && ops.storedData.newDay === true) {\r\n        createNewQuery();\r\n    }\r\n\r\n    // Debug code\r\n    if (ops.debug === true) {\r\n        cl(ops.storedData);\r\n        cl('Revealed terms count:');\r\n        cl(ops.storedData.revealedTermCount);\r\n        cl('Viewed terms count:');\r\n        cl(ops.storedData.viewedTerms);\r\n        cl('Revealed terms timer:');\r\n        cl(ops.storedData.revealCountdowns);\r\n    };\r\n}\r\n\r\n","\r\n// Imports\r\nimport ops from 'app';\r\n\r\n// Exports\r\nexport { ready, cl, clv, checkSameDay, resetData, arrayCheck, getTodaysDate, pickRandom, clickListener, getTimeComplete };\r\n\r\n// JS ready\r\nfunction ready(fn) {\r\n    if (document.readyState != 'loading') {\r\n        fn();\r\n    } else {\r\n        document.addEventListener('DOMContentLoaded', fn);\r\n    }\r\n}\r\n\r\n// Console log -> cl\r\nfunction cl(log) {\r\n    console.log(log);\r\n}\r\n\r\n// Console log plus value\r\nfunction clv(term, log) {\r\n    console.log(term + '= ' + log);\r\n}\r\n\r\n// Checks if the same or new day\r\nfunction checkSameDay() {\r\n    \r\n    let todaysDate = getTodaysDate();\r\n    let storedDate = [];\r\n\r\n    // Get date last stored\r\n    storedDate = Array.from(ops.storedData.dateOpened);\r\n\r\n    // Check if same day\r\n    if (arrayCheck(todaysDate, storedDate) === true) {\r\n        if (ops.addDay === true) { ops.storedData.newDay = true }\r\n        else { ops.storedData.newDay = false }\r\n    }\r\n    // Otherwise a new day\r\n    else {\r\n        ops.storedData.newDay = true;\r\n    }\r\n}\r\n\r\n// Creates array of day and month\r\nfunction getTodaysDate() {\r\n\r\n    // Get current day + month\r\n    let todayDate = [];\r\n    let day = new Date().getDate()\r\n    let month = new Date().getMonth();\r\n\r\n    todayDate.push([day, month]);\r\n\r\n    return todayDate;\r\n}\r\n\r\n// Creates array of day, month, hour, minute, second\r\nfunction getTimeComplete() {\r\n\r\n    // Get complete date time value \r\n    let timeComplete = [];\r\n    let day = new Date().getDate();\r\n    let month = new Date().getMonth();\r\n    let hour = new Date().getHours();\r\n    let minute = new Date().getMinutes();\r\n    let second = new Date().getSeconds();\r\n\r\n    timeComplete.push([day, month, hour, minute, second]);\r\n\r\n    return timeComplete;\r\n}\r\n\r\n// Check if arrays are the same\r\nfunction arrayCheck(arr1, arr2) {\r\n\r\n    // If same return true\r\n    if (JSON.stringify(arr1) == JSON.stringify(arr2)) {\r\n        return true;\r\n    }\r\n    // Else false\r\n    return false;\r\n}\r\n\r\n// Resets stored data\r\nfunction resetData() {\r\n\r\n    document.querySelector('.reset').addEventListener('click', (e) => {\r\n        e.preventDefault;\r\n        localforage.clear();\r\n        cl('APP RESET');\r\n    })\r\n}\r\n\r\n// Adds click functionality to selectors\r\nfunction clickListener(elements, clickFunction) {\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        elements[i].addEventListener(\"click\", () => { clickFunction(i) });\r\n    }\r\n}\r\n\r\n// Get a random term\r\nfunction pickRandom(objectList) {\r\n    let keys = Object.keys(objectList),\r\n        pickedTerm = keys[keys.length * Math.random() << 0];\r\n\r\n    return pickedTerm;\r\n}","// App data\r\n\r\nexport default {\r\n\r\n    terms: {\r\n        verb_1: { term: \"verb_1\", definition: \"ans_1\", support: \"<div><p>Present</p><table><tbody><tr><td>io</td><td>abbandono</td></tr><tr><td>tu</td><td>abbandoni</td></tr><tr><td>lui/lei</td><td>abbandona</td></tr><tr><td>noi</td><td>abbandoniamo</td></tr><tr><td>voi</td><td>abbandonate</td></tr><tr><td>loro</td><td>abbandonano</td></tr></tbody></table></div><div><p>Imperfect</p><table><tbody><tr><td>io</td><td>abbandonavo</td></tr><tr><td>tu</td><td>abbandonavi</td></tr><tr><td>lui/lei</td><td>abbandonava</td></tr><tr><td>noi</td><td>abbandonavamo</td></tr><tr><td>voi</td><td>abbandonavate</td></tr><tr><td>loro</td><td>abbandonavano</td></tr></tbody></table></div>\" },\r\n        verb_2: { term: \"verb_2\", definition: \"ans_2\", support: \"<div><p>Present</p><table><tbody><tr><td>io</td><td>abbandono</td></tr><tr><td>tu</td><td>abbandoni</td></tr><tr><td>lui/lei</td><td>abbandona</td></tr><tr><td>noi</td><td>abbandoniamo</td></tr><tr><td>voi</td><td>abbandonate</td></tr><tr><td>loro</td><td>abbandonano</td></tr></tbody></table></div><div><p>Imperfect</p><table><tbody><tr><td>io</td><td>abbandonavo</td></tr><tr><td>tu</td><td>abbandonavi</td></tr><tr><td>lui/lei</td><td>abbandonava</td></tr><tr><td>noi</td><td>abbandonavamo</td></tr><tr><td>voi</td><td>abbandonavate</td></tr><tr><td>loro</td><td>abbandonavano</td></tr></tbody></table></div>\" },\r\n        verb_3: { term: \"verb_3\", definition: \"ans_3\", support: \"<div><p>Present</p><table><tbody><tr><td>io</td><td>abbandono</td></tr><tr><td>tu</td><td>abbandoni</td></tr><tr><td>lui/lei</td><td>abbandona</td></tr><tr><td>noi</td><td>abbandoniamo</td></tr><tr><td>voi</td><td>abbandonate</td></tr><tr><td>loro</td><td>abbandonano</td></tr></tbody></table></div><div><p>Imperfect</p><table><tbody><tr><td>io</td><td>abbandonavo</td></tr><tr><td>tu</td><td>abbandonavi</td></tr><tr><td>lui/lei</td><td>abbandonava</td></tr><tr><td>noi</td><td>abbandonavamo</td></tr><tr><td>voi</td><td>abbandonavate</td></tr><tr><td>loro</td><td>abbandonavano</td></tr></tbody></table></div>\" },\r\n        verb_4: { term: \"verb_4\", definition: \"ans_4\", support: \"<div><p>Present</p><table><tbody><tr><td>io</td><td>abbandono</td></tr><tr><td>tu</td><td>abbandoni</td></tr><tr><td>lui/lei</td><td>abbandona</td></tr><tr><td>noi</td><td>abbandoniamo</td></tr><tr><td>voi</td><td>abbandonate</td></tr><tr><td>loro</td><td>abbandonano</td></tr></tbody></table></div><div><p>Imperfect</p><table><tbody><tr><td>io</td><td>abbandonavo</td></tr><tr><td>tu</td><td>abbandonavi</td></tr><tr><td>lui/lei</td><td>abbandonava</td></tr><tr><td>noi</td><td>abbandonavamo</td></tr><tr><td>voi</td><td>abbandonavate</td></tr><tr><td>loro</td><td>abbandonavano</td></tr></tbody></table></div>\" },\r\n        verb_5: { term: \"verb_5\", definition: \"ans_5\", support: \"<div><p>Present</p><table><tbody><tr><td>io</td><td>abbandono</td></tr><tr><td>tu</td><td>abbandoni</td></tr><tr><td>lui/lei</td><td>abbandona</td></tr><tr><td>noi</td><td>abbandoniamo</td></tr><tr><td>voi</td><td>abbandonate</td></tr><tr><td>loro</td><td>abbandonano</td></tr></tbody></table></div><div><p>Imperfect</p><table><tbody><tr><td>io</td><td>abbandonavo</td></tr><tr><td>tu</td><td>abbandonavi</td></tr><tr><td>lui/lei</td><td>abbandonava</td></tr><tr><td>noi</td><td>abbandonavamo</td></tr><tr><td>voi</td><td>abbandonavate</td></tr><tr><td>loro</td><td>abbandonavano</td></tr></tbody></table></div>\" }\r\n    }\r\n}\r\n","\r\n// Imports\r\nimport { cl, clv, pickRandom } from 'helperFunctions';\r\nimport appData from 'verbs';\r\nimport ops from 'app';\r\n\r\n// Exports\r\nexport { getListOfTerms, updateDataCount };\r\n\r\n// Creates a list of terms\r\nconst getListOfTerms = function getListOfTerms() {\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n    let listOfTerms = [];\r\n    let scannedTerms = [];\r\n    const dataLength = Object.keys(appData.terms).length;\r\n\r\n    // Prevent overflow\r\n    if (ops.displayedTerms > dataLength) {\r\n        ops.displayedTerms = dataLength;\r\n    }\r\n\r\n    // First time app opened\r\n    if (ops.storedData.firstTime === undefined) {\r\n\r\n        while (i < ops.displayedTerms) {\r\n            let pickedTerm = pickRandom(appData.terms);\r\n\r\n            // Ensure term hasn't been already scanned\r\n            if (!listOfTerms.includes(pickedTerm)) {\r\n                listOfTerms.push(pickedTerm);\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    // App opened before\r\n    else {\r\n\r\n        while (i < ops.displayedTerms) {\r\n            let viewedLength = Object.keys(ops.storedData.viewedTerms).length;\r\n\r\n            // If all terms viewed\r\n            if (viewedLength === dataLength) {\r\n\r\n                let viewedSorted = [];\r\n\r\n                // Convert viewed terms to array\r\n                for (let term in ops.storedData.viewedTerms) {\r\n                    viewedSorted.push([term, ops.storedData.viewedTerms[term]])\r\n                }\r\n\r\n                // Sort array by view count\r\n                viewedSorted.sort((a, b) => {\r\n                    return a[1] - b[1]\r\n                })\r\n                //if ()\r\n                // Finish off iterator with lowest viewed terms\r\n                while (i < ops.displayedTerms) {\r\n                    listOfTerms.push(viewedSorted[i][0]);\r\n                    i++;\r\n                }\r\n                // Overflow protection\r\n                i++;\r\n            }\r\n            // Still unviewed terms in data\r\n            else {\r\n                let pickedTerm = pickRandom(appData.terms);\r\n\r\n                // Ensure term hasn't been already scanned\r\n                if (!scannedTerms.includes(pickedTerm)) {\r\n                    scannedTerms.push(pickedTerm);\r\n\r\n                    // Ensure term not viewed before\r\n                    if (!ops.storedData.viewedTerms.hasOwnProperty(pickedTerm)) {\r\n                        listOfTerms.push(pickedTerm);\r\n                        ops.storedData.viewedTerms[pickedTerm] = 0;\r\n                        localforage.setItem('ops.storedData', ops.storedData);\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n            // Overflow protection\r\n            if (j > 10000) {\r\n                i = ops.displayedTerms;\r\n            }\r\n            j++;\r\n        }\r\n    }\r\n    // Return final list of terms\r\n    return listOfTerms;\r\n}\r\n\r\n// Handles count of a type of data\r\nconst updateDataCount = function (dataType, termsToAdjust, baseValue) {\r\n\r\n    let dataTypeHolder = ops.storedData[dataType] || {};\r\n\r\n    // If no viewed data, create new \r\n    if (!ops.storedData.hasOwnProperty(dataType)) {\r\n\r\n        for (let value of termsToAdjust) {\r\n            dataTypeHolder[value] = baseValue;\r\n        }\r\n    }\r\n    // If viewed data exists\r\n    else {\r\n        // If viewed term exists, update count\r\n        for (let value of termsToAdjust) {\r\n\r\n            if (ops.storedData[dataType].hasOwnProperty(value)) {\r\n                let count = ops.storedData[dataType][value];\r\n                count += 1;\r\n                dataTypeHolder[value] = count;\r\n            }\r\n            else {\r\n                dataTypeHolder[termsToAdjust] = baseValue;\r\n            }\r\n        }\r\n    }\r\n    // Pass back final object\r\n    return dataTypeHolder;\r\n}","\r\n// Imports\r\nimport { cl, clv, clickListener } from 'helperFunctions';\r\nimport appData from 'verbs';\r\nimport ops from 'app';\r\nimport { updateDataCount } from 'termCreation';\r\n\r\n// Exports\r\nexport { revealedBtnHandler, createRevealTimer };\r\n\r\n// Handles functions when reveal button clicked\r\nconst revealedBtnHandler = function revealedBtnHandler() {\r\n\r\n    let revealBtn = document.querySelectorAll('.reveal');\r\n\r\n    clickListener(revealBtn, (i) => {\r\n\r\n        if (revealBtn[i].classList.contains('disabled')) {\r\n            return false;\r\n        }\r\n        let term = [revealBtn[i].parentNode.querySelector('.term-holder').innerHTML];\r\n\r\n        // Updates the revealed view counter\r\n        let countHolder = revealBtn[i].parentNode.querySelector('.term-views');\r\n        let definitionWrapper = revealBtn[i].parentNode.querySelector('.definition-wrapper');\r\n        let definitionHolder = revealBtn[i].parentNode.querySelector('.definition-holder');\r\n        let count = parseInt(countHolder.innerHTML);\r\n\r\n        // Show definition\r\n        definitionWrapper.classList.remove('hidden');\r\n\r\n        // Increase count by one\r\n        countHolder.innerHTML = count + 1;\r\n\r\n        // Pass to updateDataCount function\r\n        let dataCount = updateDataCount('revealedTermCount', term, 1);\r\n\r\n        // Set storedData\r\n        ops.storedData.revealedTermCount = dataCount;\r\n\r\n        // Starts a timer \r\n        createRevealTimer(revealBtn[i]);\r\n\r\n        // Save to storage\r\n        localforage.setItem('ops.storedData', ops.storedData);\r\n    });\r\n}\r\n\r\n// Adds a timer to the reveal button\r\nconst createRevealTimer = function createRevealTimer(revealBtn) {\r\n\r\n    // If no stored data for reveal countdowns\r\n    if (ops.storedData.revealCountdowns === undefined) {\r\n        ops.storedData.revealCountdowns = {};\r\n    }\r\n\r\n    let term = [revealBtn.parentNode.querySelector('.term-holder').innerHTML];\r\n    let minutes = ops.counterMins;\r\n    let seconds = ops.counterSecs;\r\n    let remainingMinutes;\r\n    let remainingSeconds;\r\n    let startTime;\r\n    let timerEnded;\r\n\r\n    // New timer\r\n    if (ops.storedData.revealCountdowns[term] === undefined) {\r\n\r\n        // Get a new time\r\n        startTime = new Date().getTime();\r\n\r\n        // Set storedData\r\n        ops.storedData.revealCountdowns[term] = {\r\n            \"startTime\": startTime,\r\n            \"timerEnded\": false\r\n        };\r\n\r\n        // Start timer\r\n        startTimer();\r\n    }\r\n    // Existing timer\r\n    else {\r\n        // Start timer\r\n        startTimer();\r\n    }\r\n\r\n    function startTimer() {\r\n        let nowTime = new Date().getTime();\r\n    \r\n        // Get terms start time for countdown\r\n        startTime = ops.storedData.revealCountdowns[term].startTime;\r\n        timerEnded = ops.storedData.revealCountdowns[term].timerEnded;\r\n\r\n        // Get difference in seconds\r\n        let diffSecs = Math.floor((nowTime - startTime) / 1000);\r\n        // Get total in seconds\r\n        let totalSecs = (ops.counterMins * 60) + seconds;\r\n\r\n        // NowTime overtaken startTime\r\n        if (diffSecs >= totalSecs) {\r\n            timerEnded = true;\r\n        }\r\n        // Timer stopped, return to normal\r\n        if (timerEnded === true) {\r\n            localforage.setItem('ops.storedData', ops.storedData);\r\n            return false;\r\n        }\r\n        // Set remaining time \r\n        remainingSeconds = totalSecs - diffSecs;\r\n    }\r\n\r\n    // Set start time to storage\r\n    localforage.setItem('ops.storedData', ops.storedData);\r\n\r\n    let timeout;\r\n    let checkCount = 0;\r\n\r\n    // If timer is active   \r\n    if (timerEnded === false) {\r\n\r\n        // Start timer interval\r\n        ops.storedData.revealCountdowns[term].timerUpdate = setInterval( () => {\r\n            // Resync timer in some devices when off screen\r\n            checkCount += 1;\r\n            if (checkCount % 5 === 0) {\r\n                startTimer();\r\n            }\r\n            // Call UI timer build\r\n            buttonTimer();\r\n        }, 1000)\r\n    }\r\n\r\n    // Builds the timer\r\n    function buttonTimer() {\r\n        let displayedMinutes = Math.floor(remainingSeconds / 60);\r\n        let displayedSeconds = remainingSeconds % 60;\r\n        let hiddenZero = '';\r\n\r\n        // Timer end\r\n        if (remainingSeconds === 0) {\r\n            revealBtn.innerHTML = (\"Reveal\");\r\n            revealBtn.classList.remove('disabled');\r\n            revealBtn.disabled = false;\r\n            // Stop interval\r\n            clearInterval(ops.storedData.revealCountdowns[term].timerUpdate);\r\n            // Clear storage for term timer\r\n            delete ops.storedData.revealCountdowns[term];\r\n            return false;\r\n        }\r\n\r\n        // Handle issues like zero index\r\n        if (displayedSeconds < 10 && displayedSeconds >= 0) {\r\n            hiddenZero = '0';\r\n        }\r\n        if (remainingSeconds === 60) {\r\n            displayedSeconds = '00';\r\n        }\r\n        // Update DOM\r\n        revealBtn.innerHTML = (displayedMinutes + ':' + hiddenZero + displayedSeconds);\r\n        revealBtn.classList.add('disabled');\r\n        revealBtn.setAttribute(\"disabled\", true);\r\n\r\n        // Decrease timer\r\n        remainingSeconds -= 1;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","\r\n// Imports\r\nimport { cl, clv } from 'helperFunctions';\r\nimport appData from 'verbs';\r\nimport ops from 'app';\r\nimport { createRevealTimer } from 'termInteraction';\r\n\r\n// Exports\r\nexport { viewCreate, addHearts, setScore };\r\n\r\n// Create app view\r\nconst viewCreate = function viewCreate(termsToCreate) {\r\n\r\n    let viewHTML = \"\";\r\n\r\n    // Create HTML for terms\r\n    for (let value of termsToCreate) {\r\n\r\n        // Get terms and definitions from data\r\n        let termValue = appData.terms[value].term;\r\n        let definitionValue = appData.terms[value].definition;\r\n        let supportValue = appData.terms[value].support;\r\n        let revealCounter;\r\n        let viewsCount;\r\n\r\n        // Check storage for revealed count\r\n        if (ops.storedData.revealedTermCount === undefined) {\r\n            viewsCount = 0;\r\n        }\r\n        else {\r\n            viewsCount = ops.storedData.revealedTermCount[value] || 0;\r\n        }\r\n\r\n        // Create terms HTML\r\n        let newHolder =\r\n            `<div class=\"term-wrapper\">\r\n                <p class=\"term-holder\">${termValue}</p>\r\n                <div class=\"definition-wrapper hidden\">\r\n                    <p class=\"definition-holder\">${definitionValue}</p>\r\n                    <div class=\"support-wrapper\">${supportValue}</div>\r\n                </div>\r\n                <p class=\"term-views\">${viewsCount}</p>\r\n                <button class=\"reveal\">Reveal definition</button>\r\n            </div>`;\r\n\r\n        viewHTML += newHolder;\r\n        // Cycle for of loop\r\n    }\r\n    // Add to view\r\n    ops.container.innerHTML = viewHTML;\r\n\r\n    // Add countdown timers to term buttons\r\n    for (let value of termsToCreate) {\r\n\r\n        // Check if timer data exists\r\n        if (ops.storedData.revealCountdowns !== undefined) {\r\n\r\n            // Add countdown timers to buttons\r\n            if (ops.storedData.revealCountdowns[value] !== undefined) {\r\n\r\n                let revealBtn = document.querySelectorAll('.reveal');\r\n\r\n                // Find button node that matches term in DOM\r\n                for (let i = 0; i < revealBtn.length; i++) {\r\n                    let revealTerm = revealBtn[i].parentNode.querySelector('.term-holder').innerHTML;\r\n\r\n                    if (revealTerm === value) {\r\n                        createRevealTimer(revealBtn[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Add hearts to page\r\nconst addHearts = function addHearts() {\r\n\r\n    // Only show hearts if a new day\r\n    if (ops.storedData.newDay === true) {\r\n        let heartHolder = document.querySelector('.hearts');\r\n        let heartsHTML = \"\";\r\n\r\n        // If no hearts data exists\r\n        if (ops.storedData.hearts === undefined) {\r\n            ops.storedData.hearts = ops.points.hearts;\r\n        }\r\n        let hearts = ops.storedData.hearts;\r\n\r\n        for (let i = 0; i < hearts; i++) {\r\n            heartsHTML += '<p>❤</p>';\r\n        }\r\n        // Add to view\r\n        heartHolder.innerHTML = heartsHTML;\r\n\r\n        // Add to storage\r\n        localforage.setItem('ops.storedData', ops.storedData);\r\n    }\r\n}\r\n\r\n// Sets the score\r\nconst setScore = function setScore() {\r\n\r\n    let scoreHolder = document.querySelector('.score-holder');\r\n\r\n    // Set score if it doesn't exist\r\n    if (ops.storedData.score === undefined) {\r\n        ops.storedData.score = 0;\r\n    }\r\n    \r\n    let score = ops.storedData.score;\r\n\r\n    // Add to view\r\n    scoreHolder.innerHTML = score;\r\n}","\r\n// Imports\r\nimport { cl, clv, pickRandom } from 'helperFunctions';\r\nimport appData from 'verbs';\r\nimport ops from 'app';\r\nimport { updateDataCount } from 'termCreation';\r\n\r\n// Exports\r\nexport { createNewQuery };\r\n\r\n// Sets up query\r\nconst createNewQuery = function createNewQuery() {\r\n\r\n    // If no stored data for reveal countdowns\r\n    if (ops.storedData.queryTerms === undefined) {\r\n        ops.storedData.queryTerms = {};\r\n    }\r\n\r\n    // Pick a term for query\r\n    let randomTerm;\r\n    let i = 0;\r\n\r\n    // Set correctTerms storage if not exists\r\n    if (ops.storedData.correctTerms === undefined) {\r\n        ops.storedData.correctTerms = {};\r\n    }\r\n\r\n    // Set incorrectTerms storage if not exists\r\n    if (ops.storedData.incorrectTerms === undefined) {\r\n        ops.storedData.incorrectTerms = {};\r\n    }\r\n\r\n    // Prevent choosing query already answered correct\r\n    while (i < Object.keys(ops.storedData.revealedTermCount).length) {\r\n        \r\n        // Pick a random term\r\n        randomTerm = pickRandom(ops.storedData.revealedTermCount);\r\n        \r\n        // If query not from correct terms\r\n        if (!ops.storedData.correctTerms.hasOwnProperty(randomTerm)) {\r\n            buildQuery();\r\n            break;\r\n        }\r\n        // Else look for another\r\n        i++;\r\n    }\r\n    \r\n    // Build the query\r\n    function buildQuery() {\r\n        let queryWrapper = document.querySelector('.query-wrapper');\r\n        let queryHolder = document.querySelector('.query-holder');\r\n        let querySubmit = document.querySelector('.query-submit');\r\n        let resultHolder = document.querySelector('.result-holder');\r\n        let scoreHolder = document.querySelector('.score-holder');\r\n        let heartHolder = document.querySelector('.hearts');\r\n        let score = parseInt(scoreHolder.innerHTML);\r\n        let definition = appData.terms[randomTerm].definition;\r\n        let heartCount = ops.storedData.hearts;\r\n        let count = 0;\r\n\r\n        // Show the query wrapper\r\n        queryWrapper.classList.remove('hidden');\r\n\r\n        // Set value of query\r\n        queryHolder.innerHTML = randomTerm;\r\n\r\n        // Query outcomes\r\n        querySubmit.addEventListener(\"click\", () => {\r\n            let queryInput = document.querySelector('.query-input').value;\r\n\r\n            if (queryInput === definition || queryInput.toUpperCase() === definition.toUpperCase()) {\r\n                winCase();\r\n            }\r\n            else if (queryInput === \"\") {\r\n                resultHolder.innerHTML = \"Enter a definition.\";\r\n            }\r\n            else {\r\n                loseCase();\r\n            }\r\n        });\r\n\r\n        // If definition is right\r\n        function winCase() {\r\n            // Hide the query input\r\n            queryWrapper.classList.add('hidden');\r\n            // Display win message\r\n            resultHolder.innerHTML = \"Well done, the definition for <strong>\\\"\" + randomTerm + \"\\\"</strong> is <strong>\\\"\" + definition + \"\\\"</strong>\";\r\n            // Add to score\r\n            score += ops.points.correct;\r\n            // Update view\r\n            scoreHolder.innerHTML = score;\r\n            // Add to stored data\r\n            ops.storedData.score = score;\r\n            ops.storedData.correctTerms[randomTerm] = definition;\r\n            // Check if whole term list answered correctly\r\n            if (Object.keys(ops.storedData.correctTerms).length === Object.keys(appData.terms).length) {\r\n                ops.storedData.gameWon = true;\r\n                gameWon();\r\n            }\r\n            // Save to storage\r\n            localforage.setItem('ops.storedData', ops.storedData);\r\n        }\r\n        // If definition is wrong\r\n        function loseCase() {\r\n            let queryInput = document.querySelector('.query-input');\r\n            // Update view\r\n            resultHolder.innerHTML = \"Try again.\";\r\n            // Add placeholder\r\n            queryInput.placeholder = queryInput.value;\r\n            // Remove guess\r\n            queryInput.value = \"\";\r\n            // Lose a heart\r\n            heartHolder.removeChild(heartHolder.getElementsByTagName('p')[0]);\r\n            count += 1;\r\n            // If all hearts lost\r\n            if (count === heartCount) {\r\n                // Hide query \r\n                queryWrapper.classList.add('hidden');\r\n                heartHolder.classList.add('hidden');\r\n                // Update view\r\n                resultHolder.innerHTML = \"Sorry you lose.\";\r\n                // Add to storedDatta \r\n                ops.storedData.incorrectTerms[randomTerm] = definition;\r\n                // Save to storage\r\n                localforage.setItem('ops.storedData', ops.storedData);\r\n            }\r\n        }\r\n        // If game won\r\n        function gameWon() {\r\n            cl('game won');\r\n        }\r\n    }\r\n}"]}